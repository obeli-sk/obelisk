### Supported path prefixes:
## | Prefix       | Default path            | Details
## | ${DATA_DIR}  |  ~/.local/share/obelisk | https://docs.rs/directories/5.0.1/directories/struct.ProjectDirs.html#method.data_dir
## | ${CACHE_DIR} |  ~/.cache/obelisk       | https://docs.rs/directories/5.0.1/directories/struct.ProjectDirs.html#method.cache_dir
## | ${CONFIG_DIR}|  ~/.config/obelisk      | https://docs.rs/directories/5.0.1/directories/struct.ProjectDirs.html#method.config_dir

## Server configuration
api.listening_addr = "127.0.0.1:5005"   # Address and port on which the API server will listen.
webui.listening_addr = "127.0.0.1:8080" # Address and port on which the webui will listen.
# Note: listening on all interfaces using [::]:port is not advised, as there is no auth yet.

# sqlite.directory = "${DATA_DIR}/obelisk-sqlite" # Path to sqlite directory. Supports path prefixes.

# wasm_cache_directory = "${CACHE_DIR}/wasm" # Path to directory where downloaded or transformed WASM files are stored. Supports path prefixes.

# [codegen_cache]
## Defaults:
# enabled = true
# directory = "${CACHE_DIR}/codegen" # Path to directory where generated code is cached. Supports path prefixes.

### WASM Component configuration
## Common settings for all components
# name = "name" # Each component must be named.
## Location can be a file path or an OCI registry reference.
# location.path = "path/to/wasm"
# location.oci = "docker.io/repo/image:tag"
# content_digest = "sha256:AA.." # Optional. If specified, the WASM file must have a matching hash.

## Common executor settings
# exec.batch_size = 5 # Number of executions to lock for every event loop tick.
# exec.lock_expiry.secs = 1 # Each execution is locked for 1s by default.
# exec.tick_sleep.millis = 200 # Sleep between event loop ticks.
# exec.max_inflight_instances = "unlimited" # If set to an integer, limits the number of inflight instances.

### WASM Activity components configuration
# [[activity_wasm]]
## Common settings for all components - see above.
## Common executor settings - see above.
## Specific settings for activity_wasm:
## Retry customization: All activities are retried on trap (panic) and timeouts until `max_retries` condition is met.
# max_retries = 5
# retry_exp_backoff.millis = 100 # First retry is scheduled after 100ms after the failure, the next one after 200ms, then after 400ms...
# retry_on_err = true # When a function with a return type `result` returns the `Err` variant, attept to retry the execution.
## Guest std stream forwarding to host: one of "stdout","stderr","none". Default is "none".
# forward_stdout="stderr" # forwards stdout to host's stderr
# forward_stderr="stderr" # forwards stderr to host's stderr
## Environment variables: Set to a specific value or forward from the host. Default is empty.
# env_vars = ["ENV1", "ENV2=somevalue"]

### Workflow components configuration
# [[workflow]]
## Common settings for all components - see above.
## Common executor settings - see above.
## Retry customization: All workflows are retried on trap (panic) and timeouts forever. Therefore, `retry_exp_backoff` must not be zero.
# retry_exp_backoff.millis = 100 # First retry is scheduled after 100ms after the failure, the next one after 200ms, then after 400ms...
## Joining strategy: When workflow requests a child execution result, it can either be interrupted, or kept in the memory.
## When "interrupt" is selected, after every child execution result the whole event history must be replayed.
# join_next_blocking_strategy = "await" # Default strategy is "await"
# non_blocking_event_batching = 100 # Number of non-blocking events that can be cached and written in a batch.
# retry_on_trap = false # If set to true, traps(panics) will be handled as temporary failures and retried until the problem goes away.
# convert_core_module = true # Transparently convert Core WASM modules to WASM Components during startup.

### Webhook Endpoint section
# [[http_server]]
# name = "external"
# listening_addr = "0.0.0.0:9000"
# max_inflight_requests = "unlimited" # If set to an integer, limits the number of inflight requests
#
# [[webhook_endpoint]]
## Common settings for all components - see above.
# http_server = "external" # link to a `http_server`'s name
### Routes section
## An array of routes that will be matched against incoming requests.
## Only the path portion of a URL is taken into cosideration, the query part
## ("?param_name=value") is ignored by the matcher.
## Syntax of a route:
## "/"                                          # Only the root URL path is matched.
## "/path"                                      # All methods are matched, URL path must be exactly '/path'.
## "/path/*"                                    # All methods are matched, URL path must start with '/path/'.
## { methods = ["GET"], route = "/some/path" }  # Method must be GET and path '/some/path'.
## "/status/:param1/:param2"                    # When URL matches, `param1` and `param2` values will be exposed as env vars.
## ""                                           # Matches every possible URL, same as `/*`
## For details about the matching engine please see https://docs.rs/route-recognizer/latest/route_recognizer/
# routes = [{ methods = [ "GET" ], route = "/some"}, "/other"]
## Guest std stream forwarding to host: one of "stdout","stderr","none". Default is "none".
# forward_stdout="stderr" # forwards stdout to host's stderr
# forward_stderr="stderr" # forwards stderr to host's stderr
## Environment variables: Set to a specific value or forward from the host. Default is empty.
# env_vars = ["ENV1", "ENV2=somevalue"]

[[http_server]]
name = "external_webhook"
listening_addr = "127.0.0.1:9090"

[[activity_wasm]]
name = "test_programs_fibo_activity"
location.oci = "docker.io/getobelisk/test_programs_fibo_activity:2025-02-07@sha256:76c916d595ac458c0dba42f8d34ff8eea7184dc707197c6906011bd0e72fdc9c"
max_retries = 0

[[workflow]]
name = "test_programs_fibo_workflow"
location.oci = "docker.io/getobelisk/test_programs_fibo_workflow:2025-02-07@sha256:ff4b681bfa89c4987868ee2b56c2b499f554445dbad7f45ec5b3e5904d45370d"
exec.lock_expiry.secs = 2

[[webhook_endpoint]]
name = "test_programs_fibo_webhook"
location.oci = "docker.io/getobelisk/test_programs_fibo_webhook:2025-02-07@sha256:a8a58f0b2e937396a11b2762a6013648e82ec8fee6a335d831754c876e6b1bfc"
http_server = "external_webhook"
routes = [{ methods = ["GET"], route = "/fibo/:N/:ITERATIONS" }]

[[activity_wasm]]
name = "test_programs_http_get_activity"
location.oci = "docker.io/getobelisk/test_programs_http_get_activity:2025-02-07@sha256:61cdf28e8985c2e4ec0fa9fc937f4ee16daa8e9cb80486a21313fd42b8b1152e"
forward_stdout = "stderr"
forward_stderr = "stderr"

[[workflow]]
name = "test_programs_http_get_workflow"
location.oci = "docker.io/getobelisk/test_programs_http_get_workflow:2025-02-07@sha256:012349771ccdbce5ee7dc038cb3f38db3592f3ecdc1f64320cdc6ef4c2de8de3"

[[activity_wasm]]
name = "test_programs_sleep_activity"
location.oci = "docker.io/getobelisk/test_programs_sleep_activity:2025-02-07@sha256:9d944870cc282ac04f6a8b31911e56dfde79e5e401ddb0c21fac0e758e94f9ea"
exec.lock_expiry.secs = 10

[[workflow]]
name = "test_programs_sleep_workflow"
location.oci = "docker.io/getobelisk/test_programs_sleep_workflow:2025-02-07@sha256:78f0b3f7b8012c900c9e6a7e8a88135a6969aa3ba4bbfaeee0f5dcbbb33a4e5b"

### Send spans via gRPC to an OTLP collector.
# [otlp]
## Run `docker run --rm -it  -p 4317:4317 -p 16686:16686 jaegertracing/all-in-one:1.60` to start collecting traces.
# enabled = true
## Defaults:
# level = "info,app=trace"
# service_name = "obelisk-server"
# otlp_endpoint = "http://localhost:4317"

### Stdout configuration, by default logs INFO and above.
[log.stdout]
enabled = true
## Defaults:
# level = "info,app=trace"
# style = "plain_compact" # One of "plain","plain_compact","json"
# span = "none" # One of "none","new","enter","exit","close","active","full"
# target = false

### Sample (rolling) file configuration
# [log.file]
# enabled = true
# level = "info,obeli=debug,app=trace"
# style = "json"
# span = "close"
# target = true
# rotation = "daily"
# directory = "."
# prefix = "obelisk_server_daily"
