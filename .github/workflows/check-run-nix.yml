name: check-run-nix

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "The ref (branch or SHA) to process"
        required: false
        type: string

defaults:
  run:
    shell: bash -xe {0}

jobs:
  check-run-nix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: .#obeliskGlibcNixDev
            runner: ubuntu-24.04
          - target: .#obeliskMuslDev
            runner: ubuntu-22.04

    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }} # Use the ref if provided, otherwise defaults to the current branch/commit

      - uses: nixbuild/nix-quick-install-action@v29
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}

      - name: Create temp directory
        run: mkdir temp

      - name: Build the binary
        working-directory: temp
        run: nix build ${{ matrix.target }}

      - name: Run the binary
        working-directory: temp
        run: |
          ./result/bin/obelisk -v
          ./result/bin/obelisk server generate-config
          ./result/bin/obelisk server verify
