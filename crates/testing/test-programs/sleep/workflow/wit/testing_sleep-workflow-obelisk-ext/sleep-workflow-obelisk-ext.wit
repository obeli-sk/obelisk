// Generated by Obelisk
package testing:sleep-workflow-obelisk-ext;

interface workflow {
  use testing:sleep-workflow/workflow.{execution-id};
  use obelisk:types/execution@2.0.0.{join-set-id, await-next-extension-error, get-extension-error};
  use testing:sleep-workflow/workflow.{duration, schedule-at};

  sleep-host-activity-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-host-activity-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  sleep-host-activity-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  sleep-schedule-at-submit: func(join-set-id: borrow<join-set-id>, schedule-at: schedule-at) -> execution-id;

  sleep-schedule-at-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  sleep-schedule-at-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  sleep-activity-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-activity-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  sleep-activity-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  sleep-activity-submit-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-activity-submit-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, execution-id>, await-next-extension-error>;

  sleep-activity-submit-get: func(execution-id: execution-id) -> result<execution-id, get-extension-error>;

  reschedule-submit: func(join-set-id: borrow<join-set-id>, duration: duration, iterations: u8) -> execution-id;

  reschedule-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  reschedule-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  sleep-random-submit: func(join-set-id: borrow<join-set-id>, min-millis: u64, max-millis-inclusive: u64) -> execution-id;

  sleep-random-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  sleep-random-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  two-delays-in-same-join-set-submit: func(join-set-id: borrow<join-set-id>) -> execution-id;

  two-delays-in-same-join-set-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  two-delays-in-same-join-set-get: func(execution-id: execution-id) -> result<_, get-extension-error>;

  join-next-produces-all-processed-error-submit: func(join-set-id: borrow<join-set-id>) -> execution-id;

  join-next-produces-all-processed-error-await-next: func(join-set-id: borrow<join-set-id>) -> result<execution-id, await-next-extension-error>;

  join-next-produces-all-processed-error-get: func(execution-id: execution-id) -> result<_, get-extension-error>;
}

