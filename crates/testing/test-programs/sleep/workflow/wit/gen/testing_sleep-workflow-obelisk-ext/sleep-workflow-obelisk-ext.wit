// Generated by Obelisk 0.24.2
package testing:sleep-workflow-obelisk-ext;

interface workflow {
  use obelisk:types/time@3.0.0.{duration, schedule-at};
  use obelisk:types/execution@3.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error};

  sleep-host-activity-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-host-activity-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  sleep-host-activity-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  sleep-host-activity-invoke: func(duration: duration) -> result;

  sleep-schedule-at-submit: func(join-set-id: borrow<join-set-id>, schedule-at: schedule-at) -> execution-id;

  sleep-schedule-at-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  sleep-schedule-at-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  sleep-schedule-at-invoke: func(schedule-at: schedule-at) -> result;

  sleep-activity-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-activity-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  sleep-activity-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  sleep-activity-invoke: func(duration: duration) -> result;

  sleep-activity-submit-submit: func(join-set-id: borrow<join-set-id>, duration: duration) -> execution-id;

  sleep-activity-submit-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<execution-id>>, await-next-extension-error>;

  sleep-activity-submit-get: func(execution-id: execution-id) -> result<result<execution-id>, get-extension-error>;

  sleep-activity-submit-invoke: func(duration: duration) -> result<execution-id>;

  reschedule-submit: func(join-set-id: borrow<join-set-id>, duration: duration, iterations: u8) -> execution-id;

  reschedule-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  reschedule-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  reschedule-invoke: func(duration: duration, iterations: u8) -> result;

  sleep-random-submit: func(join-set-id: borrow<join-set-id>, min-millis: u64, max-millis-inclusive: u64) -> execution-id;

  sleep-random-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  sleep-random-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  sleep-random-invoke: func(min-millis: u64, max-millis-inclusive: u64) -> result;

  two-delays-in-same-join-set-submit: func(join-set-id: borrow<join-set-id>) -> execution-id;

  two-delays-in-same-join-set-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  two-delays-in-same-join-set-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  two-delays-in-same-join-set-invoke: func() -> result;

  join-next-produces-all-processed-error-submit: func(join-set-id: borrow<join-set-id>) -> execution-id;

  join-next-produces-all-processed-error-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result>, await-next-extension-error>;

  join-next-produces-all-processed-error-get: func(execution-id: execution-id) -> result<result, get-extension-error>;

  join-next-produces-all-processed-error-invoke: func() -> result;
}

