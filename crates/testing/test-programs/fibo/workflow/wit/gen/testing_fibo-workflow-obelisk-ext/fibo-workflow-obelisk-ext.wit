// Generated by Obelisk 0.24.2
package testing:fibo-workflow-obelisk-ext;

interface workflow {
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  fibow-submit: func(join-set: borrow<join-set>, n: u8, iterations: u32) -> execution-id;

  fibow-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<u64>>, await-next-extension-error>;

  fibow-get: func(execution-id: execution-id) -> result<result<u64>, get-extension-error>;

  fibow-invoke: func(label: string, n: u8, iterations: u32) -> result<result<u64>, invoke-extension-error>;

  fiboa-submit: func(join-set: borrow<join-set>, n: u8, iterations: u32) -> execution-id;

  fiboa-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<u64>>, await-next-extension-error>;

  fiboa-get: func(execution-id: execution-id) -> result<result<u64>, get-extension-error>;

  fiboa-invoke: func(label: string, n: u8, iterations: u32) -> result<result<u64>, invoke-extension-error>;

  fiboa-concurrent-submit: func(join-set: borrow<join-set>, n: u8, iterations: u32) -> execution-id;

  fiboa-concurrent-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<u64>>, await-next-extension-error>;

  fiboa-concurrent-get: func(execution-id: execution-id) -> result<result<u64>, get-extension-error>;

  fiboa-concurrent-invoke: func(label: string, n: u8, iterations: u32) -> result<result<u64>, invoke-extension-error>;
}

interface workflow-nesting {
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  fibo-nested-workflow-submit: func(join-set: borrow<join-set>, n: u8) -> execution-id;

  fibo-nested-workflow-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<u64>>, await-next-extension-error>;

  fibo-nested-workflow-get: func(execution-id: execution-id) -> result<result<u64>, get-extension-error>;

  fibo-nested-workflow-invoke: func(label: string, n: u8) -> result<result<u64>, invoke-extension-error>;

  fibo-start-fiboas-submit: func(join-set: borrow<join-set>, n: u8, fiboas: u32, iterations-per-fiboa: u32) -> execution-id;

  fibo-start-fiboas-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<u64>>, await-next-extension-error>;

  fibo-start-fiboas-get: func(execution-id: execution-id) -> result<result<u64>, get-extension-error>;

  fibo-start-fiboas-invoke: func(label: string, n: u8, fiboas: u32, iterations-per-fiboa: u32) -> result<result<u64>, invoke-extension-error>;
}

