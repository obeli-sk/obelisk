---
source: crates/utils/src/wasm_tools.rs
expression: exports
---
{
  "testing:http-workflow/workflow.get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": "string",
          "err": "string"
        }
      },
      "wit_type": "result<string, string>"
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-resp": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-resp"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": "string",
          "err": "string"
        }
      },
      "wit_type": "result<string, string>"
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-stargazers": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-stargazers"
    },
    "parameter_types": [],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "wit_type": "result"
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": "string",
          "err": "string"
        }
      },
      "wit_type": "result<string, string>"
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful-concurrently": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful-concurrently"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "list": "string"
        },
        "name": "urls",
        "wit_type": "list<string>"
      }
    ],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": {
            "list": "string"
          },
          "err": "string"
        }
      },
      "wit_type": "result<list<string>, string>"
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful-concurrently-stress": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful-concurrently-stress"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      },
      {
        "type_wrapper": "u32",
        "name": "concurrency",
        "wit_type": "u32"
      }
    ],
    "return_type": {
      "type_wrapper": {
        "result": {
          "ok": {
            "list": "string"
          },
          "err": "string"
        }
      },
      "wit_type": "result<list<string>, string>"
    },
    "extension": null,
    "submittable": true
  }
}
