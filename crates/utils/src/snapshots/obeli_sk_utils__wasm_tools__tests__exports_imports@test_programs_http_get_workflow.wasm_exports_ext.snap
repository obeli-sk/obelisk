---
source: crates/utils/src/wasm_tools.rs
expression: exports
---
{
  "testing:http-workflow-obelisk-ext/workflow.get-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": "string",
                    "err": "string"
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result<string, string>>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-resp-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-resp-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": "string",
                    "err": "string"
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result<string, string>>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-resp-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-resp-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-resp-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-resp-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-resp-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-resp-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-stargazers-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-stargazers-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": null,
                    "err": null
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-stargazers-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-stargazers-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": null,
                "err": null
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-stargazers-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-stargazers-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": null,
                "err": null
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-stargazers-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-stargazers-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": "string",
                    "err": "string"
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result<string, string>>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": {
                      "list": "string"
                    },
                    "err": "string"
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result<list<string>, string>>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": {
                  "list": "string"
                },
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result<list<string>, string>, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      },
      {
        "type_wrapper": {
          "list": "string"
        },
        "name": "urls",
        "wit_type": "list<string>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": {
                  "list": "string"
                },
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result<list<string>, string>, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-stress-await-next": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-stress-await-next"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "tuple": [
                {
                  "record": {
                    "id": "string"
                  }
                },
                {
                  "result": {
                    "ok": {
                      "list": "string"
                    },
                    "err": "string"
                  }
                }
              ]
            },
            "err": {
              "variant": {
                "all-processed": null,
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "wit_type": "result<tuple<execution-id, result<list<string>, string>>, await-next-extension-error>"
      }
    },
    "extension": "await_next",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-stress-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-stress-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": {
                  "list": "string"
                },
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result<list<string>, string>, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-stress-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-stress-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      },
      {
        "type_wrapper": "u32",
        "name": "concurrency",
        "wit_type": "u32"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": {
                  "list": "string"
                },
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result<list<string>, string>, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-stress-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-stress-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      },
      {
        "type_wrapper": "u32",
        "name": "concurrency",
        "wit_type": "u32"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-concurrently-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-concurrently-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      },
      {
        "type_wrapper": {
          "list": "string"
        },
        "name": "urls",
        "wit_type": "list<string>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-get"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "name": "execution-id",
        "wit_type": "execution-id"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "function-mismatch": {
                  "record": {
                    "actual-function": {
                      "option": {
                        "record": {
                          "function-name": "string",
                          "interface-name": "string"
                        }
                      }
                    },
                    "actual-id": {
                      "variant": {
                        "delay-id": {
                          "record": {
                            "id": "string"
                          }
                        },
                        "execution-id": {
                          "record": {
                            "id": "string"
                          }
                        }
                      }
                    },
                    "specified-function": {
                      "record": {
                        "function-name": "string",
                        "interface-name": "string"
                      }
                    }
                  }
                },
                "not-found-in-processed-responses": null
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, get-extension-error>"
      }
    },
    "extension": "get",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-invoke": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-invoke"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "label",
        "wit_type": "string"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "result": {
            "ok": {
              "result": {
                "ok": "string",
                "err": "string"
              }
            },
            "err": {
              "variant": {
                "invalid-name": "string"
              }
            }
          }
        },
        "wit_type": "result<result<string, string>, invoke-extension-error>"
      }
    },
    "extension": "invoke",
    "submittable": false
  },
  "testing:http-workflow-obelisk-ext/workflow.get-successful-submit": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-ext/workflow",
      "function_name": "get-successful-submit"
    },
    "parameter_types": [
      {
        "type_wrapper": "borrow",
        "name": "join-set-id",
        "wit_type": "borrow<join-set-id>"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "submit",
    "submittable": false
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-resp-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-resp-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-stargazers-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-stargazers-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-successful-concurrently-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-successful-concurrently-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      },
      {
        "type_wrapper": {
          "list": "string"
        },
        "name": "urls",
        "wit_type": "list<string>"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-successful-concurrently-stress-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-successful-concurrently-stress-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      },
      {
        "type_wrapper": "u32",
        "name": "concurrency",
        "wit_type": "u32"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow-obelisk-schedule/workflow.get-successful-schedule": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow-obelisk-schedule/workflow",
      "function_name": "get-successful-schedule"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "variant": {
            "at": {
              "record": {
                "nanoseconds": "u32",
                "seconds": "u64"
              }
            },
            "in": {
              "variant": {
                "days": "u32",
                "hours": "u32",
                "milliseconds": "u64",
                "minutes": "u32",
                "seconds": "u64"
              }
            },
            "now": null
          }
        },
        "name": "scheduled-at",
        "wit_type": "schedule-at"
      },
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "NonExtendable": {
        "type_wrapper": {
          "record": {
            "id": "string"
          }
        },
        "wit_type": "execution-id"
      }
    },
    "extension": "schedule",
    "submittable": true
  },
  "testing:http-workflow/workflow.get": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": "string",
          "err": "string"
        },
        "wit_type": "result<string, string>"
      }
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-resp": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-resp"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": "string",
          "err": "string"
        },
        "wit_type": "result<string, string>"
      }
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-stargazers": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-stargazers"
    },
    "parameter_types": [],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": null,
          "err": null
        },
        "wit_type": "result"
      }
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      }
    ],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": "string",
          "err": "string"
        },
        "wit_type": "result<string, string>"
      }
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful-concurrently": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful-concurrently"
    },
    "parameter_types": [
      {
        "type_wrapper": {
          "list": "string"
        },
        "name": "urls",
        "wit_type": "list<string>"
      }
    ],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": {
            "list": "string"
          },
          "err": "string"
        },
        "wit_type": "result<list<string>, string>"
      }
    },
    "extension": null,
    "submittable": true
  },
  "testing:http-workflow/workflow.get-successful-concurrently-stress": {
    "ffqn": {
      "ifc_fqn": "testing:http-workflow/workflow",
      "function_name": "get-successful-concurrently-stress"
    },
    "parameter_types": [
      {
        "type_wrapper": "string",
        "name": "url",
        "wit_type": "string"
      },
      {
        "type_wrapper": "u32",
        "name": "concurrency",
        "wit_type": "u32"
      }
    ],
    "return_type": {
      "Extendable": {
        "type_wrapper_tl": {
          "ok": {
            "list": "string"
          },
          "err": "string"
        },
        "wit_type": "result<list<string>, string>"
      }
    },
    "extension": null,
    "submittable": true
  }
}
